@model IEnumerable<GlobalTeamNetwork.Models.DistrSession>

@{
    ViewData["Title"] = "Session Distribution";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Distribute Sessions</title>
</head>
<body id="bodyMain">
    <h1>Distribute Sessions</h1>
    <table>
        <tr>
            <td nowrap>
                filter&nbsp;for&nbsp;Language&nbsp;<select id="langFilter" style="width:300px;">
                    <option value='??'>All</option>
                </select>&nbsp;&nbsp;&nbsp;
                &nbsp;&nbsp;
                filter&nbsp;for&nbsp;Course&nbsp;<select id="corsFilter" style="width:300px;">
                    <option value='??'>All</option>
                </select>&nbsp;&nbsp;&nbsp;
            </td>
        </tr>
    </table>

    <!-- Input controls for updating all checked rows -->
    <table id="tblSpacing" class="table table-bordered table-hover table-striped" style="overflow-x: auto; margin-top: 5px;">
        <tbody>
            <!-- For spacing only-->
            <tr>
                <td style="vertical-align:middle" width="90%">
                    Note: Check All applies to visible rows only
                </td>
                <td style="text-align:center" nowrap>
                    Archive Format&nbsp;<br>
                    <div style="align-content:center">
                        <input type="radio" id="B" name="ArchiveType" value="B" checked>
                        <label for="B">B</label>
                        <input type="radio" id="E" name="ArchiveType" value="E">
                        <label for="E">E</label>
                    </div>
                </td>
                <td style="text-align:center" nowrap>
                    Media Type&nbsp;<br>
                    <div style="align-content:center"><select id="mediaDDL"></select></div>
                </td>
                <td style="text-align:center" nowrap>
                    Location&nbsp;<br>
                    <div style="align-content:center"><select id="trxDDLCb"></select></div>
                </td>
                <td style="text-align:center" nowrap>
                    Contact&nbsp;<br>
                    <div style="align-content:center"><select id="statusDDLCb" name="trxlDDL"></select></div>
                </td>
                <td style="text-align:center" nowrap>
                    Attach Note&nbsp;<br>
                    <input type="text" id=txtNotesCb size="25">
                </td>
                <td style="text-align:center" nowrap>
                    Checked rows:<br>
                    <input type="button" value="Save" id=buttonApplyCb onclick="saveCBs();">
                </td>
            </tr>
        </tbody>
    </table>

    <div style='text-align:center;display:none' id='divLoading'><br>Please wait... Processing...&nbsp;<img src="~/img/loading.gif"></div><br>

    <div id="divMain" style="height:100vh;overflow-y:auto">


        <table id="tblMain" class="table table-bordered table-hover table-striped" style="overflow-x: auto;">
            <thead>
                <!-- Top Labels-->
                <tr>
                    <th nowrap class="columnSort" style="width:9%">Language &nbsp;<span class="nobreak sortArrow">&#8593;&#8595;</span></th>
                    <th nowrap class="columnSort">Course &nbsp;<span class="nobreak sortArrow">&#8593;&#8595;</span></th>
                    <th nowrap class="columnSort">Session &nbsp;<span class="nobreak sortArrow">&#8593;&#8595;</span></th>
                    @*<th>Notes</th>*@
                    <th style="width:6%" align="center"><input type='checkbox' id='selectAll'>&nbsp;&nbsp;All</th>
                </tr>
            </thead>
            <tbody class="dataRows">
                @foreach (var item in Model)
                {
                    <tr id="@("tr" + @item.dsID)">
                        <td data-id="@Html.Raw(item.langID)">
                            @Html.DisplayFor(model => item.LangName)
                        </td>
                        <td data-id="@Html.Raw(item.courseID)">
                            @Html.DisplayFor(model => item.CourseName)
                        </td>
                        <td data-id="@Html.Raw(item.sessionID)">
                            @Html.DisplayFor(model => item.SessionName)
                        </td>
                        <td>
                            @Html.Raw("<div style = 'text-align: center'><input class='itemCB' type='checkbox' id = '" + @item.sessionID + "'></div>")
                        </td>
                        @*<td align="center">
                            <a onclick="editItem('@item.sessionID', this)" href="javascript:void(0)" id="@item.tlID">Edit</a>
                        </td>*@
                    </tr>
                }
            </tbody>
        </table>

    </div>

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>
    <script type="text/javascript">

    //NOTE: common js functions are found in wwwroot/js/ViewCommon.js
    //scope functions declared inside of document.ready
        let saveCBs;

        $(document).ready(function () {


            //pFilter is passed to the page via query string for page refresh, etc.
            var cFilter = (new URL(location.href)).searchParams.get('cfilter');
            var lFilter = (new URL(location.href)).searchParams.get('langID');
            let mediaTypes = null;

            //Set up the drop down value arrays
            var inputValid = false;
            var delayMils = 900;
            var pageObjectLabel = 'Session Distribution';

            //Populate Language DDL
            let langArray = []
            $('.dataRows > tr > td:nth-child(1)').each(function () {
                let newLang = {};
                newLang.langId = $(this).attr('data-id');
                newLang.langName = $(this).text().replace("\n", "").trim();
                if (!langArray.find(l => l.langId === newLang.langId)) {
                    langArray.push(newLang);
                }
            });

            langArray.forEach(l =>
                $("#langFilter").append($('<option>', {
                    value: l.langId,
                    text: l.langName
                }
                )));

            //Set up Course drop down
            let corsArray = [], newCourse
            $('.dataRows > tr > td:nth-child(2)').each(function () {
                newCourse = $(this).text().replace("\n", "").trim();
                if (!corsArray.includes(newCourse)) {
                    corsArray.push(newCourse);
                }
            });

            for (var key in corsArray) {
                $("#corsFilter").append($('<option>', {
                    value: 0,
                    text: corsArray[key]
                }
                ));
            }

            //langFilter change
            $("#langFilter, #corsFilter").change(function () {
                let langFilter = $('#langFilter option:selected').text();
                let corsFilter = $('#corsFilter option:selected').text();

                //show all rows
                $(".dataRows tr").show();

                //hide rows not matching langFilter
                if (langFilter != "All") {
                    $(".dataRows tr td:nth-child(1):not(:contains('" + langFilter + "'))").parent().find("input[type=checkbox]").prop("checked", false);
                    $(".dataRows tr td:nth-child(1):not(:contains('" + langFilter + "'))").parent().hide();
                }

                //hide rows not matching corsFilter
                if (corsFilter != "All") {
                    $(".dataRows tr td:nth-child(2):not(:contains('" + corsFilter + "'))").parent().find("input[type=checkbox]").prop("checked", false);
                    $(".dataRows tr td:nth-child(2):not(:contains('" + corsFilter + "'))").parent().hide();
                }

            });

            //MediaTypes
            $.ajax({
                type: "Get",
                url: '@Url.Action("GetMediaTypesJson", "Admin")',
                dataType: 'JSON',
                cache: false,
                async: false,
                contentType: "application/json; charset=utf-8",
                success: function (mt) {
                    mediaTypes = mt;
                }
            });
            for (var key in mediaTypes) {
                $("#mediaDDL").append($('<option>', {
                    value: mediaTypes[key].mediaTypeID,
                    text: mediaTypes[key].mediaTypeName
                }));
            }

            $("#txtNotesCb").keyup(function () {
                if ($("#txtNotesCb").val().trim().length == 0) {
                    $("#noteAllcb").prop("checked", false);
                }
                else {
                    $("#noteAllcb").prop("checked", true);
                }
            });

            //Save the distributions according to selected values - Validation
            saveCBs = function saveCBs() {

                if (!$("#trxlAllcb").prop("checked") && !$("#statusAllcb").prop("checked") && !$("#noteAllcb").prop("checked")) {
                    alert('Please enter values before proceeding.');
                    return;
                }

                if ($('.itemCB:visible:checked').length == 0) {
                    alert('Please select rows before proceeding.');
                    return;
                }

                var confirmText = "Apply these values to all checked rows?\n";
                var trxlrTxt = $("#trxDDLCb option:selected").text();
                if ($("#trxlAllcb").prop("checked")) {
                    confirmText += '\nTransaltor: ' + trxlrTxt
                }
                var statusTxt = $("#statusDDLCb option:selected").text();
                if ($("#statusAllcb").prop("checked")) {
                    confirmText += '\nStatus: ' + statusTxt;
                }
                var notesTxt = $("#txtNotesCb").val();
                if ($("#noteAllcb").prop("checked")) {
                    confirmText += '\nNotes: ' + notesTxt;
                }
                confirmText += '\n\n NOTE: Please allow up to 120 seconds for completion when many rows are selected. '
                confirmText += 'If prompted by your browser, select "WAIT" until processing completes.'

                if (confirm(confirmText)) {
                    document.documentElement.style.cursor = 'wait';
                    $("#buttonApplyCb").prop("disabled", true);
                    $("#divLoading").show();
                    setTimeout(function () {
                        processCBs()
                    }, 0);
                }
            }

            //Save the distributions according to selected values - Processing
            function processCBs() {
                updateLogs = [];
                $('.itemCB:visible:checked').each(function () {
                    var Distribution = new Object;
                    Distribution.tlID = parseInt($(this).attr("id"));

                    if ($("#trxlAllcb").prop("checked")) {
                        Distribution.translatorID = parseInt($("#trxDDLCb option:selected").val());
                    }
                    else {
                        Distribution.translatorID = -1;
                    }

                    if ($("#statusAllcb").prop("checked")) {
                        Distribution.statusID = parseInt($("#statusDDLCb option:selected").val());
                    }
                    else {
                        Distribution.statusID = -1;
                    }

                    if ($("#noteAllcb").prop("checked")) {
                        Distribution.Notes = $("#txtNotesCb").val();
                    }
                    else {
                        Distribution.Notes = "~~~ Not Set ~~~";
                    }
                    updateLogs.push(Distribution);
                });

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UpdateDistributionLogs", "Workflow")',
                    data: JSON.stringify(updateLogs),
                    dataType: 'JSON',
                    cache: false,
                    async: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (r) {
                        alert(r + " Distribution(s) have been modified.");
                    }
                });

                $("#divLoading").hide();
                document.documentElement.style.cursor = 'default';

                //Give the db a minute to recognize the new records
                waitSeconds(delayMils);
                //Refresh the page
                refreshMe();
            }

            $('#selectAll').change(function () {
                var bCheck = $('#selectAll').prop("checked");
                $('.itemCB:visible').prop('checked', bCheck);
                //$('.itemCB').change();
            });


            //lFilter gets set from the Language filter passed in via query string
            if (lFilter!= null) {
                var optStr = '#langFilter option[value = "' + lFilter + '"]';
                var boolFilterExists = $(optStr).length != 0;
                //alert('boolFilterExists: '+ boolFilterExists);
                if (boolFilterExists) {
                    $('#langFilter').val(lFilter).change();
                }
            }

            //select the first course value or passed filter value and show the main table.
            //cFilter gets set from the Course filter passed in via query string
            if (cFilter != null) {
                var optStr = '#corsFilter option[value = "' + cFilter + '"]';
                var boolFilterExists = $(optStr).length != 0;
                //alert('boolFilterExists: '+ boolFilterExists);
                if (boolFilterExists) {
                    $('#corsFilter').val(cFilter).change();
                }
            }


            $('#tblMain').removeAttr('hidden');


            function refreshMe() {
                //Refresh the page
                var url = '@Url.Action("DistributeSessions", "WorkFlow")' + "?cfilter=" + $('#corsFilter option').filter(':selected').val();
                url += '&langID=' + $('#langFilter option').filter(':selected').val();
                //alert(url);
                window.location.href = url;
            }

        $('html, body').animate({ scrollTop: '0px' }, 300);

    /*end document.ready*/
    });

    </script>

</body>
</html>
