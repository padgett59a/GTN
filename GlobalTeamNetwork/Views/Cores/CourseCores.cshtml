@model IEnumerable<GlobalTeamNetwork.Models.CourseCoreSName>

@{
    ViewData["Title"] = "CourseCores";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Course Cores</title>
</head>
<body>
    <h1>Course Cores</h1>
    <table><tr><td nowrap>
    filtered&nbsp;for&nbsp;<select id="semFilter" style="width:300px;">
        <option value="??">All</option>
    </select>&nbsp;&nbsp;&nbsp;<a id="showAllRows" href="javascript:void(0)">Show All</a>

</td></tr></table><br>   

    <p>
        <a id="createNew" href="javascript:void(0)">Add New Course Core</a>
        <!--     <button id="createNew">Add Course Core</button> -->
    </p>
    <table id="tblMain" class="table" style="display: block; overflow-x: auto;">
        <thead>
            <!-- Top Labels-->
            <tr>
                @*<th>
                        ID
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.CourseName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SemesterName)
                </th>
                <th>
                    Letter
                </th>
                <th>
                    Number
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.InstructorName)
                </th>
                <th>
                    Workbook
                </th>
                <th>
                    Video Text
                </th>
                <th>
                    Videos
                </th>
                <th>
                    Mastering Files
                </th>
                <th>
                    TextFiles
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Notes)
                </th>
                <th>Modify</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr id="@(" tr" + @item.CourseCoreID)">
                    @*<td class="CourseCode">
                            @Html.DisplayFor(model => item.CourseCoreID)
                        </td>*@
                    <td>
                        @Html.DisplayFor(model => item.CourseName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.SemesterName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.CourseLetterCode)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.CourseNumberCode)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.InstructorName)
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => item.HasWorkbook, new { disabled = "disabled" })
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => item.HasVideoText, new { disabled = "disabled" })
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => item.VideosInHand, new { disabled = "disabled" })
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => item.MasteringFilesInHand, new { disabled = "disabled" })
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => item.TextFilesInHand, new { disabled = "disabled" })
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Notes)
                    </td>
                    <td>
                        <a onclick="editItem('@item.CourseCoreID', this)" href="javascript:void(0)" id="@item.CourseCoreID">Edit</a> |
                        <a asp-controller="Cores" asp-action="CourseCoreDetail" asp-route-id="@item.CourseCoreID">Details</a> |
                        <a onclick="deleteItem('@item.CourseCoreID', this)" href="javascript:void(0)" id="@item.CourseCoreID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot hidden>
            @*input controls for adding a new item*@
            <tr>
                @*<td><input type="text" id="txtCourseCoreID" class="courseInputClass" size="5" /></td>*@
                <td><input type="text" id="txtCourseName" class="courseInputClass" /></td>
                <td id="semesterDDL"><input type="text" id="txtSemesterName" class="courseInputClass" /></td>
                <td><input type="text" id="txtCourseLetterCode" class="courseInputClass" size="5" /></td>
                <td><input type="text" id="txtCourseNumberCode" class="courseInputClass" size="5" /></td>
                <td id="instructorDDL"><input type="text" id="txtInstructorID" class="courseInputClass" /></td>
                <td><input type="checkbox" id="txtHasWorkbook" class="courseInputClass" size="3" /></td>
                <td><input type="checkbox" id="txtHasVideoText" class="courseInputClass" size="3" /></td>
                <td><input type="checkbox" id="txtVideosInHand" class="courseInputClass" size="3" /></td>
                <td><input type="checkbox" id="txtMasteringFilesInHand" class="courseInputClass" size="3" /></td>
                <td><input type="checkbox" id="txtTextFilesInHand" class="courseInputClass" size="3" /></td>
                <td><input type="text" id="txtNotes" class="courseInputClass" /></td>
                <td id="tdBtnCell"><input type="button" id="btnAdd" value="Add" />&nbsp;&nbsp;&nbsp;&nbsp;<input type="button" id="btnCancel" value="Cancel" /></td>
            </tr>
            <tr id="trSaveAll">
                <td style="white-space:nowrap">
                    <input type="button" disabled id="btnSave" value="Save All" />&nbsp;&nbsp;&nbsp;
                    <input type="button" id="btnCancel" value="Cancel" />
                </td>
                <td colspan="100%"></td>
            </tr>
        </tfoot>
        <!-- Bottom Labels-->
        <tr>
            @*<th>
                    ID
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.CourseName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SemesterName)
            </th>
            <th>
                Letter
            </th>
            <th>
                Number
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InstructorName)
            </th>
            <th>
                Workbook
            </th>
            <th>
                Video Text
            </th>
            <th>
                Videos
            </th>
            <th>
                Mastering Files
            </th>
            <th>
                TextFiles
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Notes)
            </th>
            <th>Modify</th>
        </tr>
        <tr><td colspan="100%"></td></tr>
    </table>
    <p>
        <a id="createNew2" href="javascript:void(0)">Add New Course Core</a>
        <!--     <button id="createNew">Add Course Core</button> -->
    </p>

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>

    <script type="text/javascript">

    //scope functions declared inside of document.ready
    var editItem;
    var deleteItem;

    $(document).ready(function () {

        //Set up the drop down value arrays
        var inputValid = false;
        var semesters;
        var instructors;
        var delayMils = 900;
        var pageOjectLabel = 'CourseCore';

        const buttonType = {
            SAVECHANGES: 0,
            ADD: 1
        }

        function waitSeconds(iMilliSeconds) {
            var counter = 0
                , start = new Date().getTime()
                , end = 0;
            while (counter < iMilliSeconds) {
                end = new Date().getTime();
                counter = end - start;
            }
        }

        function digitsOnly(checkStr) {
            if (checkStr.length == 0) {
                return true;
            }
            else {
                const reg = new RegExp('^[0-9]+$');
                if (reg.test(checkStr)) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }

        function alphaOnly(checkStr) {
            if (checkStr.length == 0) {
                return true;
            }
            else {
                const reg = new RegExp('^[A-Za-z]+$');
                if (reg.test(checkStr)) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }

        function removeRow(evt) {
            $(evt).parent().parent().remove();
        }

        //see if the candidate Course code already exists
        function CourseCodeExists(testCode) {
            var codeMatch = $("td.CourseCode").filter(function () {
                return $(this).html().trim().toUpperCase() == testCode.toUpperCase();
            });

            if (codeMatch.length > 0)
            { return true;}
            else
            {
                return false;
            }
        }

        function getCBhtml(bChecked, bDisabled) {
            var cbCode = '<input type="checkbox"' ;
            if (bDisabled) { cbCode += ' disabled'; }
            if (bChecked) { cbCode += ' checked'; }
            cbCode += '>';
            return cbCode;
        }

        //Set up semester, instructor drop downs
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetSemestersJson","Cores")',
            dataType: "json",
            async: false,
            success: function (response) {
                semesters = response;
            }
        });

        //set up semester drop downs
        var semesterDdlCode ='<select id = "semesterDDL" name = "semesterDDL"> '
            semesterDdlCode += "<option value='??'>None Selected</option>";
            for (var key in semesters) {
                semesterDdlCode += "<option value='" + semesters[key].SemesterCode + "'>" + semesters[key].SemesterName + "</option>";
                $('#semFilter').append($('<option>', {
                    value: semesters[key].SemesterCode,
                    text: semesters[key].SemesterName
                }));
            }
        semesterDdlCode += '</select >';

        $('#semFilter').change(function () {
            var semesterFilter = this.options[this.selectedIndex].text;
            if (semesterFilter != "All") {
                $("#tblMain td:nth-child(2):contains('" + semesterFilter + "')").parent().show();
                $("#tblMain td:nth-child(2):not(:contains('" + semesterFilter + "'))").parent().hide();
            }
            else {
                //show all rows
                $("#tblMain tr").show();
            }
            //$("#tblMain tfoot>tr").hide();
            $("#tblMain TFOOT").attr("hidden", true);

        })

        //select the first value
        $('#semFilter').prop('selectedIndex', 1).change();
         //alert($("#semFilter option:selected").text());


        // works in console: $("#tblMain td:nth-child(2):contains('" + "Semester 1" + "')").parent()

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetInstructorsJson","Cores")',
            dataType: "json",
            async: false,
            success: function (response) {
                instructors = response;
            }
        });

        var instructorDdlCode =
            '<select id = "instructorDDL" name = "instructorDDL"> '
            instructorDdlCode += "<option value='??'>None Selected</option>";
            for (var key in instructors) {
                instructorDdlCode += "<option value='" + instructors[key].personID + "'>" + instructors[key].FullName + "</option>";
            }
            instructorDdlCode += '</select >';


        $("body").on("click", "#btnCancel", function () {
            //Refresh the page
            var url = '@Url.Action("CourseCores", "Cores")';
            window.location.href = url;
        });

        $("[id^=createNew]").click(function () {

            alert('createNew');

            //Set up add button
            changeSaveButton(buttonType.ADD, 0);
            $("#semesterDDL").html(semesterDdlCode);
            $("#instructorDDL").html(instructorDdlCode);

            //show footer
            //$('txtCourseCoreID').prop('disabled', false);
            $("#tblMain tfoot>tr").show();
            $("#tblMain TFOOT").attr("hidden", false);
            //scroll to bottom
            $("html, body").animate({ scrollTop: $(document).height() }, 1000);
        });

        $("#showAllRows").click(function () {
            //Set filter to 'All'
            $('#semFilter').prop('selectedIndex', 0).change();
        });

        //switch the button html
        function changeSaveButton(changeTo, selCurr ) {
            //Replace action button
            var cancelButton = "<input type=\"button\" id=\"btnCancel\" value=\"Cancel\" />";
            var saveButton = "<input type=\"button\" data-id=\"" + selCurr + "\" id=\"btnSaveEdit\" value=\"Save Changes\" />";
            var addButton = "<input type=\"button\" id=\"btnAdd\" value=\"Add Another\" />";
            var template = "~~0~~&nbsp;&nbsp;&nbsp;&nbsp;"
            var btnHtml;
            switch (changeTo) {
                case buttonType.ADD:
                    btnHtml = template.replace('~~0~~', addButton);
                    break;
                case buttonType.SAVECHANGES:
                    btnHtml = template.replace('~~0~~', saveButton) + cancelButton;
                    break;
            }
            $('#tdBtnCell').html(btnHtml);
        }

        //Enable or Disable the save button when required fields are completed and valid
        $("body").on("input", ".courseInputClass", function () {
            if (
                //$('#txtCourseCoreID').val().length > 0 &&
                $('#txtCourseName').val().length > 0 &&
                $('#txtCourseLetterCode').val().length > 0 &&
                $('#semesterDDL option:selected').val() != '??' &&
                $('#instructorDDL option:selected').val() != '??'
            ) {
                $("#btnSave").prop('disabled', false);
            }
            else {
                $("#btnSave").prop('disabled', true);
            }
        });

        $("body").on("change", "#semesterDDL, #instructorDDL", function () {
            if (
                //$('#txtCourseCoreID').val().length > 0 &&
                $('#txtCourseName').val().length > 0 &&
                $('#txtCourseLetterCode').val().length > 0 &&
                $('#semesterDDL option:selected').val() != '??' &&
                $('#instructorDDL option:selected').val() != '??'
            ) {
                $("#btnSave").prop('disabled', false);
            }
            else {
                $("#btnSave").prop('disabled', true);
            }
        });

        // Add another item
        $("body").on("click", "#btnAdd", function () {

            //Reference the input controls
            //var inp01 = $("#txtCourseCoreID");
            var inp02 = $("#txtCourseName");
            var selSemester = $("#semesterDDL");
            var inp04 = $("#txtCourseLetterCode");
            var inp05 = $("#txtCourseNumberCode");
            var selInstructor = $("#instructorDDL");
            var inp07 = $("#txtHasWorkbook");
            var inp08 = $("#txtHasVideoText");
            var inp09 = $("#txtVideosInHand");
            var inp10 = $("#txtMasteringFilesInHand");
            var inp11 = $("#txtTextFilesInHand");
            var inp12 = $("#txtNotes");

            //defaultl to true
            inputValid = true;

            //if all blank, ingore it
            var allBlank =
                (//inp01.val().length == 0 &&
                    inp02.val().length == 0 &&
                    $('#semesterDDL option:selected').val() == '??' &&
                    inp04.val().length == 0 &&
                    $('#instructorDDL option:selected').val() == '??');

            alert(allBlank);

            if (!allBlank) {

                //Validate input
                if (//inp01.val().length == 0 ||
                    inp02.val().length == 0 ||
                    $('#semesterDDL option:selected').val() == '??' ||
                    inp04.val().length == 0 ||
                    $('#instructorDDL option:selected').val() == '??') {
                    inputValid = false;
                    alert("Please enter all " + pageOjectLabel + " data before proceeding.");
                }
                else if (!alphaOnly(inp04.val())) {
                    inputValid = false;
                    alert("The Course Letter code must be letters only. Please correct this before proceeding.");
                }
                else if (!digitsOnly(inp05.val())) {
                    inputValid = false;
                    alert("The Course Number code must be number. Please correct this before proceeding.");
                }
                //else if (CourseCodeExists(inp01.val())) {
                //    inputValid = false;
                //    alert(pageOjectLabel + " IDs must be unique. Please correct this before proceeding.");
                //}

                if (inputValid) {
                    //Get the reference of the Table's TFOOT element.
                    var tFoot = $("#tblMain > TFOOT")[0];

                    //Add a new row above the input row and move the added values to it
                    var row = tFoot.insertRow(0);

                    ////Add Course ID cell.
                    //var cell = $(row.insertCell(-1));
                    //cell.html(inp01.val());
                    //cell.addClass("CourseCode");

                    //Add Course Name cell.
                    cell = $(row.insertCell(-1));
                    cell.html(inp02.val());

                    //Add Semester select cell.
                    cell = $(row.insertCell(-1));
                    cell.html($("#semesterDDL option:selected").text());

                    //Add Letter Code cell.
                    cell = $(row.insertCell(-1));
                    cell.html(inp04.val());

                    //Add Number Code cell.
                    cell = $(row.insertCell(-1));
                    cell.html(inp05.val());

                    //Add Instructor select cell.
                    cell = $(row.insertCell(-1));
                    cell.html($("#instructorDDL option:selected").text());

                    //Add Has Workbook
                    cell = $(row.insertCell(-1));
                    if (inp07.is(':checked')) {
                        cell.html(getCBhtml(true, true));
                    }
                    else {
                        cell.html(getCBhtml(false, true));
                    }

                    //Add Has Video Text
                    cell = $(row.insertCell(-1));
                    if (inp08.is(':checked')) {
                        cell.html(getCBhtml(true, true));
                    }
                    else {
                        cell.html(getCBhtml(false, true));
                    }

                    //Add Videos In Hand
                    cell = $(row.insertCell(-1));
                    if (inp09.is(':checked')) {
                        cell.html(getCBhtml(true, true));
                    }
                    else {
                        cell.html(getCBhtml(false, true));
                    }

                    //Add Mastering Files In Hand
                    cell = $(row.insertCell(-1));
                    if (inp10.is(':checked')) {
                        cell.html(getCBhtml(true, true));
                    }
                    else {
                        cell.html(getCBhtml(false, true));
                    }

                    //Add Text Files In Hand
                    cell = $(row.insertCell(-1));
                    if (inp11.is(':checked')) {
                        cell.html(getCBhtml(true, true));
                    }
                    else {
                        cell.html(getCBhtml(false, true));
                    }

                    //Add Notes cell
                    cell = $(row.insertCell(-1));
                    cell.html(inp12.val());

                    //Add Remove button cell.
                    cell = $(row.insertCell(-1));
                    var btnRemove = $("<input />");
                    btnRemove.attr("type", "button");
                    btnRemove.attr("onclick", "removeRow(this);");
                    btnRemove.val("Remove");
                    cell.append(btnRemove);

                    //Clear the input control values of the new Add row
                    //inp01.val("");
                    inp02.val("");
                    $("#semesterDDL select").val("??");
                    inp04.val("");
                    inp05.val("");
                    $("#instructorDDL select").val("??");
                    inp07.prop('checked', false);
                    inp08.prop('checked', false);
                    inp09.prop('checked', false);
                    inp10.prop('checked', false);
                    inp11.prop('checked', false);
                    inp12.val("");

                    //now there is something to save
                    $("#btnSave").prop('disabled', false);
                }
            }
        });

        //Save all added rows
        $("body").on("click", "#btnSave", function () {

            //Validate any unsaved input. Click returns false if entered data is invalid. btnAdd sets inputValid boolean
            $("#btnAdd").click();

            if (inputValid)
            {
                //Loop through the Table rows and build a JSON array.
                var Courses = new Array();
                var exitNow;

                $("#tblMain TFOOT TR").each(function () {
                    var row = $(this);
                    var courseCore = {};

                    //push new rows to the add list
                    if (row.find('td:last-child').html().includes('value="Remove"')) {
                        //courseCore.courseCoreID = null; //IDENTITY value
                        courseCore.CourseName = row.find("TD").eq(0).html();
                        courseCore.semesterCode = semesters.find(semester => semester.SemesterName === row.find("TD").eq(1).html()).SemesterCode;
                        courseCore.CourseLetterCode = row.find("TD").eq(2).html();
                        courseCore.CourseNumberCode = parseInt(row.find("TD").eq(3).html());
                        courseCore.instructorID = parseInt(instructors.find(instructor => instructor.FullName === row.find("TD").eq(4).html()).personID);
                        courseCore.HasWorkbook = row.find("TD").eq(5).find('input:checkbox:first').is(':checked');
                        courseCore.HasVideoText = row.find("TD").eq(6).find('input:checkbox:first').is(':checked');
                        courseCore.VideosInHand = row.find("TD").eq(7).find('input:checkbox:first').is(':checked');
                        courseCore.MasteringFilesInHand = row.find("TD").eq(8).find('input:checkbox:first').is(':checked');
                        courseCore.TextFilesInHand = row.find("TD").eq(9).find('input:checkbox:first').is(':checked');
                        courseCore.Notes =row.find("TD").eq(10).html();
                        Courses.push(courseCore);
                    }
                });

                //Serialize the object array and send the JSON to the Controller using AJAX.
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("InsertCourses","Cores")',
                    data: JSON.stringify(Courses),
                    dataType: 'JSON',
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (r) {
                    alert(r + " " + pageOjectLabel + "(s) inserted.");
                    }
                });

                //Give the db a minute to recognize the new records
                waitSeconds(delayMils);

                //Refresh the page
                var url = '@Url.Action("CourseCores", "Cores")';
                window.location.href = url;
            }
        });

        //Delete item via AJAX
        /*function deleteItem(itemId, button) {*/
        deleteItem = function (itemId, button) {

            //Determine the reference of the calling Row
            var row = $(button).closest("TR");
            var name = $("TD", row).eq(1).html().trim();

            if (confirm("Do you want to delete Course: " + name + " ?")) {
                //Get the reference of the Table.
                var table = $("#tblMain")[0];
                var itemArray = new Array;
                itemArray[0] = itemId;

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("deleteCourses","Cores")',
                    data: JSON.stringify(itemArray),
                    dataType: 'JSON',
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (r) {
                        alert(r + " " + pageOjectLabel + "(s) have been deleted.");
                    }
                });

                //Give the db a minute to recognize the new records
                waitSeconds(delayMils);
                //Refresh the page
                var url = '@Url.Action("CourseCores", "Cores")';
                window.location.href = url;
            }
        }

        //Edit an org
        //function editItem(itemId, button) {
        editItem = function (itemId, button) {

            var editRow = $(button).closest("TR");
            var selectedVal;

            //Set up Save Changes button
            changeSaveButton(buttonType.SAVECHANGES, itemId);

            //Hide edit row
            editRow.hide();

            //set up the ddl html
            $("#semesterDDL").html(semesterDdlCode);
            $("#instructorDDL").html(instructorDdlCode);

            selectedVal = editRow.find("TD").eq(2).html().trim();

            ////Copy current values to the edit controls
            //$('txtCourseCoreID').val(editRow.find("TD").eq(0).html().trim());
            //$('txtCourseCoreID').prop('disabled', true);

            $('#txtCourseName').val(editRow.find("TD").eq(1).html().trim());
            $("#curriculumDDL").val(curriculumTextArray.indexOf(selectedVal)).change();
            $('#txtNumberOfVideoSessions').val(editRow.find("TD").eq(3).html().trim()); curriculum

            //Show footer
            $("#trSaveAll").attr("hidden", true);
            //$("#btnCancel").attr("hidden", false);

            $("#tblMain TFOOT").attr("hidden", false);
            //scroll to bottom
            $("html, body").animate({ scrollTop: $(document).height() }, 1000);
        }

        //Save edits via ajax
        $("body").on("click", "#btnSaveEdit", function () {
            var row = $("#tblMain TFOOT TR:first");
            var semCore = {};
            var exitNow = false;

            // get values of the candidate object
            semCore.CourseCode = row.find("input").eq(0).val();
            semCore.CourseName = row.find("input").eq(1).val();
            //convert the curriculumName to curriculumID
            semCore.CurriculumId = parseInt(curriculumTextArray.indexOf(row.find("select option:selected").text()));
            nvsString = row.find("input").eq(2).val();

            //if all blank, post 'use Delete' message
            if (semCore.CourseCode.length > 0 ||
                semCore.CourseName.length > 0 ||
                nvsString.length > 0) {
                //if some blanks fix it
                if (semCore.CourseCode.length == 0 ||
                    semCore.CourseName.length == 0 ||
                    nvsString.length == 0) {
                    alert('Please populate all ' + pageOjectLabel + ' fields before saving changes.');
                    exitNow = true;
                }
                //validate nvs
                else if (!digitsOnly(nvsString)) {
                    alert("The Number Of Video Sessions must be number. Please correct this before proceeding.");
                    exitNow = true;
                }
            }
            // all were blank
            else {
                alert("Please populate the " + pageOjectLabel + " fields or use 'Delete' to remove a row.");
                exitNow = true;
            }

            if (!exitNow) {
                semCore.NumberOfVideoSessions = parseInt(nvsString);
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UpdateCourse","Cores")',
                    data: JSON.stringify(semCore),
                    dataType: 'JSON',
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (r) {
                        alert(r + " CourseCore(s) have been modified.");
                    }
                });

                //Give the db a minute to recognize the new records
                waitSeconds(delayMils);
                //Refresh the page
                var url = '@Url.Action("CourseCores", "Cores")';
                window.location.href = url;
            }
        });

        $('html, body').animate({ scrollTop: '0px' }, 300);

    /*end document.ready*/
    });

    </script>

</body>
</html>
