@model IEnumerable<GlobalTeamNetwork.Models.CourseCoreSName>

@{
    ViewData["Title"] = "CourseCores";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Course Cores</title>
</head>
<body>
    <h1>Course Cores</h1>
    
    @*Filtering*@
    <table><tr><td nowrap>
    filtered&nbsp;for&nbsp;Semester&nbsp;<select id="semFilter" style="width:300px;">
        <option value="??">All</option>
    </select>&nbsp;&nbsp;&nbsp;<a id="showAllRows" href="javascript:void(0)">Show All</a>

    </td></tr></table><br>   

    <p>
        <a id="createNew" href="javascript:void(0)">Add New Course Core</a>
        <!--     <button id="createNew">Add Course Core</button> -->
    </p>
    <table id="tblMain" class="table table-bordered table-hover table-striped" style="display: block; overflow-x: auto;" hidden>
        <thead>
            <!-- Top Labels-->
            <tr>
                @*<th>
                        ID
                    </th>*@
                <th class="columnSort">
                    @Html.DisplayNameFor(model => model.CourseName)&nbsp;<span class="nobreak sortArrow">&#8593;&#8595;</span>
                </th>
                <th class="columnSort">
                    @Html.DisplayNameFor(model => model.SemesterName)&nbsp;<span class="nobreak sortArrow">&#8593;&#8595;</span>
                </th>
                <th class="columnSort">
                    Letter&nbsp;<span class="nobreak sortArrow">&#8593;&#8595;</span>
                </th>
                <th class="columnSort">
                    Number&nbsp;<span class="nobreak sortArrow">&#8593;&#8595;</span>
                </th>
                <th class="columnSort">
                    @Html.DisplayNameFor(model => model.InstructorName)&nbsp;<span class="nobreak sortArrow">&#8593;&#8595;</span>
                </th>
                <th class="columnSort">
                    Workbook&nbsp;<span class="nobreak sortArrow">&#8593;&#8595;</span>
                </th>
                <th>
                    Video Text
                </th>
                <th>
                    Videos
                </th>
                <th>
                    Mastering Files
                </th>
                <th>
                    TextFiles
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Notes)
                </th>
                <th>Modify</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr id="@(" tr" + @item.CourseCoreID)">
                    @*<td class="CourseCode">
                            @Html.DisplayFor(model => item.CourseCoreID)
                        </td>*@
                    <td>
                        @Html.DisplayFor(model => item.CourseName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.SemesterName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.CourseLetterCode)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.CourseNumberCode)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.InstructorName)
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => item.HasWorkbook, new { disabled = "disabled" })
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => item.HasVideoText, new { disabled = "disabled" })
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => item.VideosInHand, new { disabled = "disabled" })
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => item.MasteringFilesInHand, new { disabled = "disabled" })
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => item.TextFilesInHand, new { disabled = "disabled" })
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Notes)
                    </td>
                    <td>
                        <a onclick="editItem('@item.CourseCoreID', this)" href="javascript:void(0)" id="@item.CourseCoreID">Edit</a> |
                        <a asp-controller="Cores" asp-action="CourseCoreDetail" asp-route-id="@item.CourseCoreID">Details</a> |
                        <a onclick="deleteItem('@item.CourseCoreID', this)" href="javascript:void(0)" id="@item.CourseCoreID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot hidden>
            <!-- Bottom Labels-->
            <tr class="bottomLabels">
                @*<th>
                ID
            </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.CourseName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SemesterName)
                </th>
                <th>
                    Letter
                </th>
                <th>
                    Number
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.InstructorName)
                </th>
                <th>
                    Workbook
                </th>
                <th>
                    Video Text
                </th>
                <th>
                    Videos
                </th>
                <th>
                    Mastering Files
                </th>
                <th>
                    TextFiles
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Notes)
                </th>
                <th>Modify</th>
            </tr>

            @*input controls for adding a new item*@
            <tr>
                @*<td><input type="text" id="txtCourseCoreID" class="courseInputClass" size="5" /></td>*@
                <td><input type="text" id="txtCourseName" class="courseInputClass" /></td>
                <td id="semesterDDL"><input type="text" id="txtSemesterName" class="courseInputClass" /></td>
                <td><input type="text" id="txtCourseLetterCode" class="courseInputClass" size="5" /></td>
                <td><input type="text" id="txtCourseNumberCode" class="courseInputClass" size="5" /></td>
                <td id="instructorDDL"><input type="text" id="txtInstructorID" class="courseInputClass" /></td>
                <td><input type="checkbox" id="txtHasWorkbook" class="courseInputClass" size="3" /></td>
                <td><input type="checkbox" id="txtHasVideoText" class="courseInputClass" size="3" /></td>
                <td><input type="checkbox" id="txtVideosInHand" class="courseInputClass" size="3" /></td>
                <td><input type="checkbox" id="txtMasteringFilesInHand" class="courseInputClass" size="3" /></td>
                <td><input type="checkbox" id="txtTextFilesInHand" class="courseInputClass" size="3" /></td>
                <td><input type="text" id="txtNotes" class="courseInputClass" /></td>
                <td nowrap id="tdBtnCell"><input type="button" id="btnAdd" value="Add" />&nbsp;&nbsp;&nbsp;&nbsp;<input type="button" id="btnCancel" value="Cancel" /></td>
            </tr>
            <tr id="trSaveAll">
                <td style="white-space:nowrap">
                    <input type="button" disabled id="btnSave" value="Save All" />&nbsp;&nbsp;&nbsp;
                    <input type="button" id="btnCancel" value="Cancel" />
                </td>
                <td colspan="100%"></td>
            </tr>
        </tfoot>
    </table>
    <p>
        <a id="createNew2" href="javascript:void(0)">Add New Course Core</a>
        <!--     <button id="createNew">Add Course Core</button> -->
    </p>

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>

    <script type="text/javascript">

    //NOTE: common js functions are found in wwwroot/js/ViewCommon.js
    //scope functions declared inside of document.ready
    var editItem;
    var deleteItem;

        $(document).ready(function () {

            //pFilter is passed to the page via query string for page refresh, etc.
            var pFilter = (new URL(location.href)).searchParams.get('filter');

            //Set up the drop down value arrays
            var inputValid = false;
            var semesters;
            var instructors;
            var delayMils = 900;
            var pageOjectLabel = 'CourseCore';

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetSemestersJson","Cores")',
                dataType: "json",
                async: false,
                success: function (response) {
                    semesters = response;
                }
            });


            //set up semester drop downs
            var semesterDdlCode = '<select id = "semesterDDL" name = "semesterDDL"> '
            semesterDdlCode += "<option value='??'>None Selected</option>";
            for (var key in semesters) {
                semesterDdlCode += "<option value='" + semesters[key].SemesterCode + "'>" + semesters[key].SemesterName + "</option>";
                $('#semFilter').append($('<option>', {
                    value: semesters[key].SemesterCode,
                    text: semesters[key].SemesterName
                }));
            }
            semesterDdlCode += '</select >';

            $('#semFilter').change(function () {
                var semesterFilter = this.options[this.selectedIndex].text;
                if (semesterFilter != "All") {
                    $("#tblMain td:nth-child(2):contains('" + semesterFilter + "')").parent().show();
                    $("#tblMain td:nth-child(2):not(:contains('" + semesterFilter + "'))").parent().hide();
                }
                else {
                    //show all rows
                    $("#tblMain tr").show();
                }
                //$("#tblMain tfoot>tr").hide();
                $("#tblMain TFOOT").attr("hidden", true);

            })

        //select the first semester value or passed filter value and show the main table
        if (pFilter != null) {
            var boolFilterExists = semesterDdlCode.indexOf("value='" + pFilter + "'") > -1;
            //alert('boolFilterExists: '+ boolFilterExists);
            if (boolFilterExists) {
                $('#semFilter').val(pFilter).change();
            }
        }
        else {
            $('#semFilter').prop('selectedIndex', 1).change();
        }
        $('#tblMain').removeAttr('hidden');

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetInstructorsJson","Cores")',
            dataType: "json",
            async: false,
            success: function (response) {
                instructors = response;
            }
        });

        var instructorDdlCode =
            '<select id = "instructorDDL" name = "instructorDDL"> '
            instructorDdlCode += "<option value='??'>None Selected</option>";
            for (var key in instructors) {
                instructorDdlCode += "<option value='" + instructors[key].personID + "'>" + instructors[key].FullName + "</option>";
            }
            instructorDdlCode += '</select >';


        function refreshMe() {
                //Refresh the page
            var url = '@Url.Action("CourseCores", "Cores")' + "?filter=" + $('#semFilter option').filter(':selected').val();
            window.location.href = url;
            }

        $("body").on("click", "#btnCancel", function () {
            refreshMe();
        });

        $("[id^=createNew]").click(function () {

            //Set up add button
            changeSaveButton(buttonType.ADD, 0);

            //Default to current filter
            var smstrReplVal = "<option value='" + $('#semFilter').val() + "'>";
            var smstrReplValOpt = smstrReplVal.replace('option value=', 'option selected value=');
            var smstrDDLCodeOpt = semesterDdlCode.replace(smstrReplVal, smstrReplValOpt);
            //alert(smstrDDLCodeOpt);
            $("#semesterDDL").html(smstrDDLCodeOpt);
            $("#instructorDDL").html(instructorDdlCode);

            //show footer
            //$('txtCourseCoreID').prop('disabled', false);
            $("#tblMain tfoot>tr").show();
            $("#tblMain TFOOT").attr("hidden", false);
            //scroll to bottom
            $("html, body").animate({ scrollTop: $(document).height() }, 1000);
        });

        $("#showAllRows").click(function () {
            //Set filter to 'All'
            $('#semFilter').prop('selectedIndex', 0).change();
        });

        //See if all input values are blank
        function allBlank() {
            var allAreBlank =
                (
                    $("#txtCourseName").val().length == 0 &&
                    $('#semesterDDL option:selected').val() == '??' &&
                    $("#txtCourseLetterCode").val().length == 0 &&
                    $('#instructorDDL option:selected').val() == '??'
                );
            return allAreBlank;
        }

        //validate input and set inputValid global boolean
        function validateInput() {

            //default to true
            inputValid = true;

            if (!allBlank()) {
                //Validate input
                if (//inp01.val().length == 0 || //don't use if IDENTITY Column
                    $("#txtCourseName").val().length == 0 ||
                    $('#semesterDDL option:selected').val() == '??' ||
                    $("#txtCourseLetterCode").val().length == 0 ||
                    $('#instructorDDL option:selected').val() == '??') {
                    inputValid = false;
                    alert("Please enter all " + pageOjectLabel + " data before proceeding.");
                }
                else if (!alphaOnly($("#txtCourseLetterCode").val())) {
                    inputValid = false;
                    alert("The Course Letter code must be letters only. Please correct this before proceeding.");
                }
                else if (!digitsOnly($("#txtCourseNumberCode").val())) {
                    inputValid = false;
                    alert("The Course Number code must be number. Please correct this before proceeding.");
                }
                //else if (CourseCodeExists(inp01.val())) {
                //    inputValid = false;
                //    alert(pageOjectLabel + " IDs must be unique. Please correct this before proceeding.");
                //}
            }
        }

        //Enable or Disable the save button when required fields are completed and valid
        $("body").on("input", ".courseInputClass", function () {
            if (
                //$('#txtCourseCoreID').val().length > 0 &&
                $('#txtCourseName').val().length > 0 &&
                $('#txtCourseLetterCode').val().length > 0 &&
                $('#semesterDDL option:selected').val() != '??' &&
                $('#instructorDDL option:selected').val() != '??'
            ) {
                $("#btnSave").prop('disabled', false);
            }
            else {
                $("#btnSave").prop('disabled', true);
            }
        });

        //Enable or Disable the save button when required fields are completed and valid
        $("body").on("change", "#semesterDDL, #instructorDDL", function () {
            if (
                //$('#txtCourseCoreID').val().length > 0 &&
                $('#txtCourseName').val().length > 0 &&
                $('#txtCourseLetterCode').val().length > 0 &&
                $('#semesterDDL option:selected').val() != '??' &&
                $('#instructorDDL option:selected').val() != '??'
            ) {
                $("#btnSave").prop('disabled', false);
            }
            else {
                $("#btnSave").prop('disabled', true);
            }
        });

        // Add another item - validate input
        $("body").on("click", "#btnAdd", function () {

            validateInput();

            if (inputValid) {
                //Get the reference of the Table's TFOOT element.
                var tFoot = $("#tblMain > TFOOT")[0];

                //Add a new row above the input row and move the added values to it
                var row = tFoot.insertRow(0);

                ////Add Course ID cell.
                //var cell = $(row.insertCell(-1));
                //cell.html(inp01.val());
                //cell.addClass("CourseCode");

                //Add Course Name cell.
                cell = $(row.insertCell(-1));
                cell.html( $("#txtCourseName").val());

                //Add Semester select cell.
                cell = $(row.insertCell(-1));
                cell.html($("#semesterDDL option:selected").text());

                //Add Letter Code cell.
                cell = $(row.insertCell(-1));
                cell.html($("#txtCourseLetterCode").val());

                //Add Number Code cell.
                cell = $(row.insertCell(-1));
                cell.html($("#txtCourseNumberCode").val());

                //Add Instructor select cell.
                cell = $(row.insertCell(-1));
                cell.html($("#instructorDDL option:selected").text());

                //Add Has Workbook
                cell = $(row.insertCell(-1));
                if ($("#txtHasWorkbook").is(':checked')) {
                    cell.html(getCBhtml(true, true));
                }
                else {
                    cell.html(getCBhtml(false, true));
                }

                //Add Has Video Text
                cell = $(row.insertCell(-1));
                if ($("#txtHasVideoText").is(':checked')) {
                    cell.html(getCBhtml(true, true));
                }
                else {
                    cell.html(getCBhtml(false, true));
                }

                //Add Videos In Hand
                cell = $(row.insertCell(-1));
                if ($("#txtVideosInHand").is(':checked')) {
                    cell.html(getCBhtml(true, true));
                }
                else {
                    cell.html(getCBhtml(false, true));
                }

                //Add Mastering Files In Hand
                cell = $(row.insertCell(-1));
                if ($("#txtMasteringFilesInHand").is(':checked')) {
                    cell.html(getCBhtml(true, true));
                }
                else {
                    cell.html(getCBhtml(false, true));
                }

                //Add Text Files In Hand
                cell = $(row.insertCell(-1));
                if ($("#txtTextFilesInHand").is(':checked')) {
                    cell.html(getCBhtml(true, true));
                }
                else {
                    cell.html(getCBhtml(false, true));
                }

                //Add Notes cell
                cell = $(row.insertCell(-1));
                cell.html($("#txtNotes").val());

                //Add Remove button cell.
                cell = $(row.insertCell(-1));
                var btnRemove = $("<input />");
                btnRemove.attr("type", "button");
                btnRemove.attr("onclick", "removeRow(this);");
                btnRemove.val("Remove");
                cell.append(btnRemove);

                //Clear the input control values of the new Add row
                //inp01.val("");
                    $("#txtCourseName").val("");
                $("#semesterDDL select").val("??");
                $("#txtCourseLetterCode").val("");
                $("#txtCourseNumberCode").val("");
                $("#instructorDDL select").val("??");
                $("#txtHasWorkbook").prop('checked', false);
                $("#txtHasVideoText").prop('checked', false);
                $("#txtVideosInHand").prop('checked', false);
                $("#txtMasteringFilesInHand").prop('checked', false);
                $("#txtTextFilesInHand").prop('checked', false);
                $("#txtNotes").val("");

                //now there is something to save
                $("#btnSave").prop('disabled', false);
            }
        });

        //Save all added rows
        $("body").on("click", "#btnSave", function () {

            //Validate any unsaved input. Click returns false if entered data is invalid. validateInput sets inputValid boolean
            validateInput();

            if (inputValid) {

                //Loop through the Table rows and build a JSON array.
                var Courses = new Array();

                $("#tblMain TFOOT TR").each(function () {
                    var row = $(this);
                    var courseCore = {};

                    //push new rows to the add list
                    if (row.find('td:last-child').html().includes('value="Add Another"')) {

                        if (!allBlank())
                        {
                            //courseCore.courseCoreID = null; //IDENTITY value
                            courseCore.CourseName = row.find("input").eq(0).val();
                            courseCore.semesterCode = $('#semesterDDL option').filter(':selected').val();
                            courseCore.CourseLetterCode = row.find("input").eq(1).val();
                            courseCore.CourseNumberCode = parseInt(row.find("input").eq(2).val());
                            courseCore.instructorID = parseInt($('#instructorDDL option').filter(':selected').val());
                            courseCore.HasWorkbook = row.find("TD").eq(5).find('input:checkbox:first').is(':checked');
                            courseCore.HasVideoText = row.find("TD").eq(6).find('input:checkbox:first').is(':checked');
                            courseCore.VideosInHand = row.find("TD").eq(7).find('input:checkbox:first').is(':checked');
                            courseCore.MasteringFilesInHand = row.find("TD").eq(8).find('input:checkbox:first').is(':checked');
                            courseCore.TextFilesInHand = row.find("TD").eq(9).find('input:checkbox:first').is(':checked');
                            //NOTE: All inputs, and checkboxes match find("input")
                            courseCore.Notes = row.find("input").eq(8).val();
                            Courses.push(courseCore);
                        }
                    }

                    if (row.find('td:last-child').html().includes('value="Remove"')) {
                        //courseCore.courseCoreID = null; //IDENTITY value
                        courseCore.CourseName = row.find("TD").eq(0).html();
                        courseCore.semesterCode = semesters.find(semester => semester.SemesterName === decodeHtml(row.find("TD").eq(1).html())).SemesterCode;
                        courseCore.CourseLetterCode = row.find("TD").eq(2).html();
                        courseCore.CourseNumberCode = parseInt(row.find("TD").eq(3).html());
                        courseCore.instructorID = parseInt(instructors.find(instructor => instructor.FullName === decodeHtml(row.find("TD").eq(4).html())).personID);
                        courseCore.HasWorkbook = row.find("TD").eq(5).find('input:checkbox:first').is(':checked');
                        courseCore.HasVideoText = row.find("TD").eq(6).find('input:checkbox:first').is(':checked');
                        courseCore.VideosInHand = row.find("TD").eq(7).find('input:checkbox:first').is(':checked');
                        courseCore.MasteringFilesInHand = row.find("TD").eq(8).find('input:checkbox:first').is(':checked');
                        courseCore.TextFilesInHand = row.find("TD").eq(9).find('input:checkbox:first').is(':checked');
                        courseCore.Notes = row.find("TD").eq(10).html();
                        Courses.push(courseCore);
                    }
                });

                //Serialize the object array and send the JSON to the Controller using AJAX.
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("InsertCourses","Cores")',
                    data: JSON.stringify(Courses),
                    dataType: 'JSON',
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (r) {
                        alert(r + " " + pageOjectLabel + "(s) inserted.");
                    }
                });

                //Give the db a minute to recognize the new records
                waitSeconds(delayMils);

                //Refresh the page
                refreshMe();
            }
        });

        //Delete item via AJAX
        /*function deleteItem(itemId, button) {*/
        deleteItem = function (itemId, button) {

            //Determine the reference of the calling Row
            var row = $(button).closest("TR");
            var name = $("TD", row).eq(0).html().trim();

            if (confirm("Do you want to delete Course: " + name + " ?")) {
                //Get the reference to the Table.
                //var table = $("#tblMain")[0];
                var itemArray = new Array;
                itemArray[0] = parseInt(itemId);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("deleteCourses","Cores")',
                    data: JSON.stringify(itemArray),
                    dataType: 'JSON',
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (r) {
                        alert(r + " " + pageOjectLabel + "(s) have been deleted.");
                    }
                });

                //Give the db a minute to recognize the new records
                waitSeconds(delayMils);
                //Refresh the page
                refreshMe();
            }
        }

        //Edit an item
        editItem = function editItem(itemId, button) {

            var editRow = $(button).closest("TR");
            //var selectedVal;

            //Set up Save Changes button
            changeSaveButton(buttonType.SAVECHANGES, itemId);

            //Hide edit row
            editRow.hide();

            var semReplVal = "<option value='" + semesters.find(semester => semester.SemesterName === editRow.find("TD").eq(1).html().trim()).SemesterCode + "'>";
            var semReplValOpt = semReplVal.replace('option value=', 'option selected value=');
            var semesterDdlCodeOpt = semesterDdlCode.replace(semReplVal, semReplValOpt);

            var instrReplVal = "<option value='" + instructors.find(instructor => instructor.FullName === editRow.find("TD").eq(4).html().trim()).personID + "'>";
            var instrReplValOpt = instrReplVal.replace('option value=', 'option selected value=');
            var instructorDdlCodeOpt = instructorDdlCode.replace(instrReplVal, instrReplValOpt);

            ////set up the ddls html
            $("#semesterDDL").html(semesterDdlCodeOpt);
            $("#instructorDDL").html(instructorDdlCodeOpt);

            //Copy unmodified values to the edit controls
            $('#txtCourseName').val(editRow.find("TD").eq(0).html().trim());
            $('#txtCourseLetterCode').val(editRow.find("TD").eq(2).html().trim());
            $('#txtCourseNumberCode').val(editRow.find("TD").eq(3).html().trim());
            $("#txtHasWorkbook").prop('checked', editRow.find("TD").eq(5).find('input:checkbox:first').is(':checked'));
            $("#txtHasVideoText").prop('checked', editRow.find("TD").eq(6).find('input:checkbox:first').is(':checked'));
            $("#txtVideosInHand").prop('checked', editRow.find("TD").eq(7).find('input:checkbox:first').is(':checked'));
            $("#MasteringFilesInHand").prop('checked', editRow.find("TD").eq(8).find('input:checkbox:first').is(':checked'));
            $("#txtTextFilesInHand").prop('checked', editRow.find("TD").eq(9).find('input:checkbox:first').is(':checked'));
            $('#txtNotes').val(editRow.find("TD").eq(10).html().trim());

            //Hide Save ALL button row, show footer
            $("#trSaveAll").attr("hidden", true);
            $("#tblMain tfoot>tr").show();
            $("#tblMain TFOOT").attr("hidden", false);

            //scroll to bottom
            $("html, body").animate({ scrollTop: $(document).height() }, 1000);
        }


        //Save edits via ajax
        $("body").on("click", "#btnSaveEdit", function () {

            var editRow = $("#btnSaveEdit").closest("TR");
            var courseCore = {};
            validateInput();

            if (inputValid) {
                //push modified editRow to the add list
                courseCore.courseCoreID = parseInt($("#btnSaveEdit").attr('data-id'));
                courseCore.CourseName = editRow.find("input").eq(0).val();
                courseCore.semesterCode = $('#semesterDDL option').filter(':selected').val();
                courseCore.CourseLetterCode = editRow.find("input").eq(1).val();
                courseCore.CourseNumberCode = parseInt(editRow.find("input").eq(2).val());
                courseCore.instructorID = parseInt($('#instructorDDL option').filter(':selected').val());
                courseCore.HasWorkbook = editRow.find("TD").eq(5).find('input:checkbox:first').is(':checked');
                courseCore.HasVideoText = editRow.find("TD").eq(6).find('input:checkbox:first').is(':checked');
                courseCore.VideosInHand = editRow.find("TD").eq(7).find('input:checkbox:first').is(':checked');
                courseCore.MasteringFilesInHand = editRow.find("TD").eq(8).find('input:checkbox:first').is(':checked');
                courseCore.TextFilesInHand = editRow.find("TD").eq(9).find('input:checkbox:first').is(':checked');
                //NOTE: All inputs, and checkboxes match find("input")
                courseCore.Notes = editRow.find("input").eq(8).val();

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UpdateCourse","Cores")',
                    data: JSON.stringify(courseCore),
                    dataType: 'JSON',
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (r) {
                        alert(r + " CourseCore(s) have been modified.");
                    }
                });

                //Give the db a minute to recognize the new records
                waitSeconds(delayMils);
                //Refresh the page
                refreshMe();
            }
        });

        $('html, body').animate({ scrollTop: '0px' }, 300);

    /*end document.ready*/
    });

    </script>

</body>
</html>
