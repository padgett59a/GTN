@model IEnumerable<GlobalTeamNetwork.Models.ExamTranslationStep>

@{
    ViewData["Title"] = "ExamTranslationSteps";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ExamTranslationSteps</title>
</head>
<body>

    <h1>ExamTranslationSteps</h1>

    <p>
        <a id="createNew" href="javascript:void(0)">Add New ExamTranslationStep</a>
    </p>

    <table id="tblMain" class="table table-bordered table-hover table-striped">
        <thead>
            <tr>
                @*<th>
            @Html.DisplayNameFor(model => model.examtsID)
        </th>*@
                <th class="columnSort" style="width:30%">
                    @Html.DisplayNameFor(model => model.Step) &nbsp;<span class="nobreak sortArrow">&#8593;&#8595;</span>
                </th>
                <th style="width:10%">
                    @Html.DisplayNameFor(model => model.DefaultPayDollars)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Notes)
                </th>
                <th style="width:15%">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                @*<td>
            @Html.DisplayFor(modelItem => item.ExamTranslationStepsID)
        </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Step)
                </td>
                <td>
                    @if (@item.DefaultPayDollars > 0)
                    {
                        @Html.Raw("$ ") @Html.DisplayFor(modelItem => item.DefaultPayDollars);
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
                <td>
                    <a onclick="editItem('@item.examtsID', this)" href="javascript:void(0)" id="@item.examtsID">Edit</a> |
                    <a asp-controller="Admin" asp-action="ExamTranslationStepsDetail" asp-route-id="@item.examtsID">Details</a> |
                    <a onclick="deleteItem('@item.examtsID', this)" href="javascript:void(0)" id="@item.examtsID">Delete</a>
                </td>
            </tr>
            }
        </tbody>
        <tfoot hidden>
            <!-- Bottom Labels-->
            <tr class="bottomLabels">
                <th>
                    @Html.DisplayNameFor(model => model.Step)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DefaultPayDollars)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Notes)
                </th>
                <th>Actions</th>
            </tr>

            <tr>
                <td><input type="text" id="txtStep" class="itemInputClass" /></td>
                <td nowrap>$&nbsp;<input type="text" id="txtDefaultPayDollars" class="itemInputClass" /></td>
                @*<td nowrap><input type="text" id="txtDefaultPayDollars" class="itemInputClass" /></td>*@
                <td><input type="text" id="txtNotes" class="itemInputClass" /></td>
                <td id="tdBtnCell"><input type="button" id="btnAdd" value="Add" />&nbsp;&nbsp;&nbsp;&nbsp;<input type="button" id="btnCancel" value="Cancel" /></td>
            </tr>
            <tr id="trSaveAll">
                <td>
                    <input type="button" disabled id="btnSave" value="Save All" />&nbsp;&nbsp;&nbsp;
                    <input type="button" id="btnCancel" value="Cancel" />
                </td>
                <td colspan="100%"></td>
            </tr>
        </tfoot>

    </table>
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>

    <script type="text/javascript">

    //NOTE: common js functions are found in wwwroot/js/ViewCommon.js

    //scope functions declared inside of document.ready
    var editItem;
    var deleteItem;

    $(document).ready(function () {

        var delayMils = 900;
        var pageObjectLabel = 'ExamTranslationSteps';

        function refreshMe() {
            //Refresh the page
            var url = '@Url.Action("ExamTranslationSteps", "Admin")' + "?filter=" + getCurrentSort();
            window.location.href = url;
        }

        //See if all input values are blank
        function allBlank() {
            var allAreBlank = (
                $("#txtStep").val().length == 0 &&
                $("#txtDefaultPayDollars").val().length == 0 &&
                $("#txtNotes").val().length == 0
            );
            return allAreBlank;
        }


        //validate input and set inputValid global boolean
        function validateInput() {

            //default to true
            inputValid = true;

            if (!allBlank()) {
                //Validate input
                if (
                    $("#txtStep").val().length == 0 ||
                    $("#txtDefaultPayDollars").val().length == 0
                ) {
                    inputValid = false;
                    alert("Please enter all " + pageObjectLabel + " data before proceeding.");
                }
                else if (!amountsOnly($("#txtDefaultPayDollars").val())) {
                    inputValid = false;
                    alert("The DefaultPayDollars must be an amount in the format 'X.XX'  Please correct this before proceeding.");
                }
            }
        }

        //If all required data complete enable save button
        $("body").on("blur", ".itemInputClass", function () {
            if (
                $('#txtStep').val().length > 0 &&
                $('#txtDefaultPayDollars').val().length > 0 
            ) {
                $("#btnSave").prop('disabled', false);
            }
        });

        $("body").on("input", ".itemInputClass", function () {
            if (
                $('#txtStep').val().length > 0 &&
                $('#txtDefaultPayDollars').val().length > 0
            ) {
                $("#btnSave").prop('disabled', false);
            }
        });

        $("body").on("click", "#btnCancel", function () {
            //Refresh the page
            refreshMe();
        });

        $("[id^=createNew]").click(function () {
            //Set up add button
            changeSaveButton(buttonType.ADD, 0);

            //show footer
            $('#txtStep').prop('disabled', false);
            $("#tblMain TFOOT").attr("hidden", false);
            //scroll to bottom
            $("html, body").animate({ scrollTop: $(document).height() }, 1000);
        });

        // Add another item
        $("body").on("click", "#btnAdd", function () {

            if (!allBlank()) {

                validateInput();

                if (inputValid) {

                    //Get the reference of the Table's TFOOT element.
                    var tFoot = $("#tblMain > TFOOT")[0];

                    //Add Row and copy input values in
                    var row = tFoot.insertRow(0);

                    //Add txtStep cell
                    var cell = $(row.insertCell(-1));
                    cell.html($("#txtStep").val());

                    //Add txtDefaultAmount cell
                    var cell = $(row.insertCell(-1));
                    cell.html('$&nbsp;' + trimDecimal($("#txtDefaultPayDollars").val()));

                    //Add txtNotes cell
                    var cell = $(row.insertCell(-1));
                    cell.html($("#txtNotes").val());

                    //Add Button cell.
                    cell = $(row.insertCell(-1));
                    var btnRemove = $("<input />");
                    btnRemove.attr("type", "button");
                    btnRemove.attr("onclick", "removeRow(this);");
                    btnRemove.val("Remove");
                    cell.append(btnRemove);

                    //Clear the input control values
                    $("#txtStep").val("");
                    $("#txtDefaultPayDollars").val("");
                    $("#txtNotes").val("");

                    //now there is something to save
                    $("#btnSave").prop('disabled', false);
                }
            }
        });


        //Save all added rows
        $("body").on("click", "#btnSave", function () {

            //Validate any unsaved input. Click returns false if entered data is invalid. validateInput sets inputValid boolean
            validateInput();

            if (inputValid) {
                //Loop through the Table rows and build a JSON array.
                var examTranslationSteps = new Array();

                $("#tblMain TFOOT TR").each(function () {
                    var row = $(this);
                    var examTranslationStepsObj = {};

                    //Skip the bottomLabels row
                    if (!row.hasClass("bottomLabels")) {

                        //push new rows to the add list
                        if (row.find('td:last-child').html().includes('value="Add Another"')) {

                            if (!allBlank()) {
                                //examTranslationStepsObj.ExamTranslationStepsID = null; //IDENTITY value
                                examTranslationStepsObj.Step = row.find("input").eq(0).val();
                                examTranslationStepsObj.DefaultPayDollars = parseFloat(trimDollar(row.find("input").eq(1).val()));
                                examTranslationStepsObj.Notes= row.find("input").eq(2).val();
                                examTranslationSteps.push(examTranslationStepsObj);
                            }
                        }

                        if (row.find('td:last-child').html().includes('value="Remove"')) {
                            //examTranslationStepsObj.ExamTranslationStepsID = null; //IDENTITY value
                            examTranslationStepsObj.Step = row.find("TD").eq(0).html();
                            examTranslationStepsObj.DefaultPayDollars = parseFloat(trimDollar(row.find("TD").eq(1).html()));
                            examTranslationStepsObj.Notes = row.find("TD").eq(2).html();
                            examTranslationSteps.push(examTranslationStepsObj);
                        }
                    }
                });

                //alert(JSON.stringify(examTranslationSteps));

                //Serialize the object array and send the JSON to the Controller using AJAX.
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("InsertExamTranslationSteps", "Admin")',
                    data: JSON.stringify(examTranslationSteps),
                    dataType: 'JSON',
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (r) {
                        alert(r + " " + pageObjectLabel + "(s) inserted.");
                    }
                });

                //Give the db a minute to recognize the new records
                waitSeconds(delayMils);

                //Refresh the page
                refreshMe();
            }
        });


        //Delete item via AJAX
        deleteItem = function (itemId, button) {

            //Determine the reference of the calling Row
            var row = $(button).closest("TR");
            var name = $("TD", row).eq(0).html().trim();

            if (confirm("Do you want to delete " + pageObjectLabel + " " + name + " ?")) {
                var itemArray = new Array;
                itemArray[0] = parseInt(itemId);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("deleteExamTranslationStep","Admin")',
                    data: JSON.stringify(itemArray),
                    dataType: 'JSON',
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (r) {
                        if (r > 0) {
                            alert(r + " " + pageObjectLabel + "(s) have been deleted.");
                        }
                        else {
                            HandleError(r, pageObjectLabel, name);
                        }
                    }
                });

                //Give the db a minute to recognize the new records
                waitSeconds(delayMils);
                //Refresh the page
                refreshMe();
            }
        }

        //Edit an org
        editItem = function (itemId, button) {

            var editRow = $(button).closest("TR");

            //Set up Save Changes button
            changeSaveButton(buttonType.SAVECHANGES, itemId);

            //Hide edit row
            editRow.hide();
            //var selectedVal = editRow.find("TD").eq(0).html().trim();

            //Copy current values to the edit controls
            $('#txtStep').val(editRow.find("TD").eq(0).html().trim());
            $('#txtDefaultPayDollars').val( trimDollar(editRow.find("TD").eq(1).html().trim()));
            $('#txtNotes').val(editRow.find("TD").eq(2).html().trim());

            //Show footer
            $("#trSaveAll").attr("hidden", true);
            //$("#btnCancel").attr("hidden", false);

            $("#tblMain TFOOT").attr("hidden", false);
            //scroll to bottom
            $("html, body").animate({ scrollTop: $(document).height() }, 1000);
        }

        //Save edits via ajax
        //Note: btnSaveEdit is defined in ViewCommon.js
        $("body").on("click", "#btnSaveEdit", function () {

            var editRow = $("#btnSaveEdit").closest("TR");
            var examTranslationSteps = {};
            validateInput();

            if (inputValid) {
                //push modified editRow to the add list
                examTranslationSteps.examtsID = parseInt($("#btnSaveEdit").attr('data-id'));
                examTranslationSteps.Step = editRow.find("input").eq(0).val();
                examTranslationSteps.DefaultPayDollars = parseFloat(editRow.find("input").eq(1).val());
                examTranslationSteps.Notes = editRow.find("input").eq(2).val();

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UpdateExamTranslationStep", "Admin")',
                    data: JSON.stringify(examTranslationSteps),
                    dataType: 'JSON',
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    success: function (r) {
                        alert(r + " examTranslationSteps(s) have been modified.");
                    }
                });

                //Give the db a minute to recognize the new records
                waitSeconds(delayMils);
                //Refresh the page
                refreshMe();
            }
        });

    /*end document.ready*/
    });

    </script>

</body>
</html>


